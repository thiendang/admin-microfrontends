{"version":3,"file":"static/js/src_chart-nine_tsx.04a89a87.chunk.js","mappings":"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","sources":["chart-nine.tsx","components/ChartNine.tsx"],"sourcesContent":["import { MicrofrontendContext, register, z } from \"microfrontends\";\nimport React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRoot } from \"react-dom/client\";\n\nimport pkg from \"../package.json\";\nimport ChartNine from \"./components/ChartNine.tsx\";\n\nconst getHTMLElement = (ref: HTMLElement | string) =>\n  ref instanceof HTMLElement ? ref : document.getElementById(ref);\n\nconst MFChartNine = () => {\n  const { navigate } = useContext(MicrofrontendContext);\n  return (\n    <ChartNine scope=\"charts\" module=\"./chart-nine\" />\n  );\n};\n\nexport default register(pkg.name, \"./chart-nine\", {\n  mount: (containerRef, props) => {\n    const container = getHTMLElement(containerRef);\n    if (container?.getAttribute(\"data-mf-mounted\") === \"true\") {\n      return () => {\n        ReactDOM.unmountComponentAtNode(container!);\n      };\n    }\n    container?.setAttribute(\"data-mf-mounted\", \"true\");\n    const root = createRoot(container!);\n    root.render(\n      <React.StrictMode>\n        <MicrofrontendContext.Provider value={props as any}>\n          <MFChartNine />\n        </MicrofrontendContext.Provider>\n      </React.StrictMode>\n    );\n\n    return () => {\n      root.unmount();\n    };\n  },\n  unmount: (containerRef) => {\n    ReactDOM.unmountComponentAtNode(getHTMLElement(containerRef)!);\n  },\n  props: z.object({}),\n});\n","import { ApexOptions } from 'apexcharts';\nimport React, { useEffect, useState } from 'react';\nimport loadable from 'loadable-components';\nconst ReactApexChart = loadable(() => import('react-apexcharts'));\n\ninterface SeriesData {\n  data: number[];\n}\n\ninterface ChartNineState {\n  series: SeriesData[];\n}\n\nconst options: ApexOptions = {\n  chart: {\n    height: 350,\n    type: 'line',\n    id: 'areachart-2',\n  },\n  annotations: {\n    yaxis: [\n      {\n        y: 8200,\n        borderColor: '#00E396',\n        label: {\n          borderColor: '#00E396',\n          style: {\n            color: '#fff',\n            background: '#00E396',\n          },\n          text: 'Support',\n        },\n      },\n      {\n        y: 8600,\n        y2: 9000,\n        // borderColor: '#000',\n        // fillColor: '#FEB019',\n        opacity: 0.2,\n        label: {\n          // borderColor: '#333',\n          style: {\n            fontSize: '10px',\n            color: '#fff',\n            background: '#FEB019',\n          },\n          text: 'Y-axis range',\n        },\n      },\n    ],\n    xaxis: [\n      {\n        x: new Date('23 Nov 2017').getTime(),\n        strokeDashArray: 0,\n        borderColor: '#775DD0',\n        label: {\n          borderColor: '#775DD0',\n          style: {\n            color: '#fff',\n            background: '#775DD0',\n          },\n          text: 'Anno Test',\n        },\n      },\n      {\n        x: new Date('26 Nov 2017').getTime(),\n        x2: new Date('28 Nov 2017').getTime(),\n        fillColor: '#B3F7CA',\n        opacity: 0.4,\n        label: {\n          borderColor: '#B3F7CA',\n          style: {\n            fontSize: '10px',\n            color: '#fff',\n            background: '#00E396',\n          },\n          offsetY: -10,\n          text: 'X-axis range',\n        },\n      },\n    ],\n    points: [\n      {\n        x: new Date('01 Dec 2017').getTime(),\n        y: 8607.55,\n        marker: {\n          size: 8,\n          fillColor: '#fff',\n          strokeColor: 'red',\n          radius: 2,\n          cssClass: 'apexcharts-custom-class',\n        },\n        label: {\n          borderColor: '#FF4560',\n          offsetY: 0,\n          style: {\n            color: '#ffffff',\n            background: '#FF4560',\n          },\n\n          text: 'Point Annotation',\n        },\n      },\n      {\n        x: new Date('08 Dec 2017').getTime(),\n        y: 9340.85,\n        marker: {\n          size: 0,\n        },\n        image: {\n          path: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/600px-Instagram_icon.png?20200512141346',\n        },\n      },\n    ],\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  stroke: {\n    curve: 'straight',\n  },\n  grid: {\n    padding: {\n      right: 30,\n      left: 20,\n    },\n  },\n  title: {\n    // text: 'Line with Annotations',\n    align: 'left',\n  },\n  labels: [\n    '13 Nov 2017',\n    '14 Nov 2017',\n    '15 Nov 2017',\n    '16 Nov 2017',\n    '17 Nov 2017',\n    '20 Nov 2017',\n    '21 Nov 2017',\n    '22 Nov 2017',\n    '23 Nov 2017',\n    '24 Nov 2017',\n    '27 Nov 2017',\n    '28 Nov 2017',\n    '29 Nov 2017',\n    '30 Nov 2017',\n    '01 Dec 2017',\n    '04 Dec 2017',\n    '05 Dec 2017',\n    '06 Dec 2017',\n    '07 Dec 2017',\n    '08 Dec 2017',\n  ],\n  xaxis: {\n    type: 'datetime',\n  },\n};\n\ntype Props = {\n  scope?: string;\n  module?: string;\n};\n\nconst ChartNine: React.FC<Props> = ({scope, module}: Props) => {\n  const [state, setState] = useState<ChartNineState>({\n    series: [\n      {\n        data: [\n          8107.85, 8128, 8122.9, 8165.5, 8340.7, 8423.7, 8423.5, 8514.3,\n          8481.85, 8487.7, 8506.9, 8626.2, 8668.95, 8602.3, 8607.55, 8512.9,\n          8496.25, 8600.65, 8881.1, 9340.85,\n        ],\n      },\n    ],\n  });\n\n  const handleReset = () => {\n    setState((prevState) => ({\n      ...prevState,\n      series: [\n        {\n          data: [\n            8107.85, 8128, 8122.9, 8165.5, 8340.7, 8423.7, 8423.5, 8514.3,\n            8481.85, 8487.7, 8506.9, 8626.2, 8668.95, 8602.3, 8607.55, 8512.9,\n            8496.25, 8600.65, 8881.1, 9340.85,\n          ],\n        },\n      ],\n    }));\n  };\n\n  if (typeof window !== 'undefined') {\n    handleReset;\n  }\n\n  return (\n    <div className=\"outline outline-orange-400 relative h-full sm:px-8 rounded-sm border border-stroke bg-white px-5 pb-5 pt-8 shadow-default dark:border-strokedark dark:bg-boxdark\">\n      {scope && module && (\n        <div className=\"absolute top-0 left-px text-xs font-semibold\">\n          mf-scope: {scope} - (mf-module: {module})\n        </div>\n      )}\n      <div className=\"mb-6 flex flex-col gap-2 sm:!flex-row sm:!items-center sm:!justify-between\">\n        <div>\n          <h4 className=\"text-title-sm2 font-bold text-black dark:text-white\">\n            Socials Overview\n          </h4>\n        </div>\n      </div>\n\n      <div>\n        <div id=\"chartNine\" className=\"-ml-5\">\n          <div style={{ minHeight: '365px' }}>\n            {typeof window !== 'undefined' && (\n              <ReactApexChart\n                options={options}\n                series={state.series}\n                type=\"line\"\n                height={350}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default ChartNine;\n"],"names":["getHTMLElement","ref","HTMLElement","document","getElementById","MFChartNine","navigate","useContext","MicrofrontendContext","_jsx","ChartNine","scope","module","register","pkg","mount","containerRef","props","container","getAttribute","ReactDOM","setAttribute","root","createRoot","render","React","children","Provider","value","unmount","z","object","ReactApexChart","loadable","options","chart","height","type","id","annotations","yaxis","y","borderColor","label","style","color","background","text","y2","opacity","fontSize","xaxis","x","Date","getTime","strokeDashArray","x2","fillColor","offsetY","points","marker","size","strokeColor","radius","cssClass","image","path","dataLabels","enabled","stroke","curve","grid","padding","right","left","title","align","labels","_ref","state","setState","useState","series","data","_jsxs","className","minHeight","window"],"sourceRoot":""}