{"version":3,"file":"static/js/src_chart-four_tsx.df315853.chunk.js","mappings":"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","sources":["chart-four.tsx","components/ChartFour.tsx"],"sourcesContent":["import { MicrofrontendContext, register, z } from \"microfrontends\";\nimport React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRoot } from \"react-dom/client\";\n\nimport pkg from \"../package.json\";\nimport ChartFour from \"./components/ChartFour.tsx\";\n\nconst getHTMLElement = (ref: HTMLElement | string) =>\n  ref instanceof HTMLElement ? ref : document.getElementById(ref);\n\nconst MFChartFour = () => {\n  const { navigate, manifests } = useContext(MicrofrontendContext);\n  return (\n    <ChartFour scope=\"charts\" module=\"./chart-four\" />\n  );\n};\n\nexport default register(pkg.name, \"./chart-four\", {\n  mount: (containerRef, props) => {\n    const container = getHTMLElement(containerRef);\n    if (container?.getAttribute(\"data-mf-mounted\") === \"true\") {\n      return () => {\n        ReactDOM.unmountComponentAtNode(container!);\n      };\n    }\n    container?.setAttribute(\"data-mf-mounted\", \"true\");\n    const root = createRoot(container!);\n    root.render(\n      <React.StrictMode>\n        <MicrofrontendContext.Provider value={props as any}>\n          <MFChartFour />\n        </MicrofrontendContext.Provider>\n      </React.StrictMode>\n    );\n\n    return () => {\n      root.unmount();\n    };\n  },\n  unmount: (containerRef) => {\n    ReactDOM.unmountComponentAtNode(getHTMLElement(containerRef)!);\n  },\n  props: z.object({}),\n});\n","import { ApexOptions } from 'apexcharts';\nimport React, { useEffect, useState } from 'react';\nimport loadable from 'loadable-components';\nconst ReactApexChart = loadable(() => import('react-apexcharts'));\n\ninterface SeriesData {\n  data: number[];\n}\n\ninterface ChartFourState {\n  series: SeriesData[];\n}\n\nconst options: ApexOptions = {\n  colors: ['#3C50E0'],\n  chart: {\n    fontFamily: 'Satoshi, sans-serif',\n    type: 'bar',\n    height: 365,\n    toolbar: {\n      show: !1,\n    },\n  },\n  plotOptions: {\n    bar: {\n      horizontal: !1,\n      columnWidth: '55%',\n      borderRadius: 2,\n    },\n  },\n  dataLabels: {\n    enabled: !1,\n  },\n  stroke: {\n    show: !0,\n    width: 4,\n    colors: ['transparent'],\n  },\n  xaxis: {\n    categories: [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12',\n      '13',\n      '14',\n      '15',\n      '16',\n      '17',\n      '18',\n      '19',\n      '20',\n      '21',\n      '22',\n      '23',\n      '24',\n      '25',\n      '26',\n      '27',\n      '28',\n      '29',\n      '30',\n    ],\n    axisBorder: {\n      show: !1,\n    },\n    axisTicks: {\n      show: !1,\n    },\n  },\n  legend: {\n    show: !0,\n    position: 'top',\n    horizontalAlign: 'left',\n    fontFamily: 'Satoshi',\n    markers: {\n      radius: 99,\n    },\n  },\n  grid: {\n    yaxis: {\n      lines: {\n        show: !1,\n      },\n    },\n    xaxis: {\n      lines: {\n        show: !1,\n      },\n    },\n  },\n  fill: {\n    opacity: 1,\n  },\n  tooltip: {\n    x: {\n      show: !1,\n    },\n  },\n};\n\ntype Props = {\n  scope?: string;\n  module?: string;\n};\n\nconst ChartFour: React.FC<Props> = ({scope, module}: Props) => {\n  const [state, setState] = useState<ChartFourState>({\n    series: [\n      {\n        data: [\n          168, 385, 201, 298, 187, 195, 291, 110, 215, 390, 280, 112, 123, 212,\n          270, 190, 310, 115, 90, 380, 112, 223, 292, 170, 290, 110, 115, 290,\n          380, 312,\n        ],\n      },\n    ],\n  });\n\n  const handleReset = () => {\n    setState((prevState) => ({\n      ...prevState,\n      series: [\n        {\n          data: [\n            168, 385, 201, 298, 187, 195, 291, 110, 215, 390, 280, 112, 123,\n            212, 270, 190, 310, 115, 90, 380, 112, 223, 292, 170, 290, 110, 115,\n            290, 380, 312,\n          ],\n        },\n      ],\n    }));\n  };\n\n  if (typeof window !== 'undefined') {\n    handleReset;\n  }\n\n  return (\n    <div className=\"outline outline-orange-400 relative col-span-12 rounded-sm border border-stroke bg-white px-5 pt-8 pb-5 shadow-default dark:border-strokedark dark:bg-boxdark sm:px-8\">\n      {scope && module && (\n        <div className=\"absolute top-0 left-px text-xs font-semibold\">\n          mf-scope: {scope} - (mf-module: {module})\n        </div>\n      )}\n      <div>\n        <h4 className=\"text-title-sm2 font-bold text-black dark:text-white\">\n          Visitors Analytics\n        </h4>\n      </div>\n\n      <div className=\"mb-2\">\n        <div id=\"chartFour\" className=\"-ml-5\">\n          <div style={{ minHeight: '365px' }}>\n            {typeof window !== 'undefined' && (\n              <ReactApexChart\n                options={options}\n                series={state.series}\n                type=\"bar\"\n                height={350}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartFour;\n"],"names":["getHTMLElement","ref","HTMLElement","document","getElementById","MFChartFour","navigate","manifests","useContext","MicrofrontendContext","_jsx","ChartFour","scope","module","register","pkg","mount","containerRef","props","container","getAttribute","ReactDOM","setAttribute","root","createRoot","render","React","children","Provider","value","unmount","z","object","ReactApexChart","loadable","options","colors","chart","fontFamily","type","height","toolbar","show","plotOptions","bar","horizontal","columnWidth","borderRadius","dataLabels","enabled","stroke","width","xaxis","categories","axisBorder","axisTicks","legend","position","horizontalAlign","markers","radius","grid","yaxis","lines","fill","opacity","tooltip","x","_ref","state","setState","useState","series","data","_jsxs","className","id","style","minHeight","window"],"sourceRoot":""}